{{#unless session.isOnboarded}}
  {{> onboarding_notice}}
{{/unless}}
{{> header route="Customers"}}
<div class="flex relative flex-col mt-0.5 flex-1 w-full text-left pb-8">
  {{#if customers.length}}
    <div class="flex-1 container pb-24 xl:mx-auto xxs:max-w-full xxs:px-4 xs:px-10 md:px-20">
      <div class="flex items-center justify-between py-6 xs:pt-12 xs:pb-6 flex-row gap-2">
        <h2 class="text-3xl font-bold">
          Customers
        </h2>
        <button id="create" class="bg-brand border border-brand-outline text-white font-semibold relative text-sm flex flex-row gap-2 items-center px-2 py-1 max-h-28 rounded-full">
          <svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M5 0C5.55228 0 6 0.447715 6 1V4L9 4C9.55228 4 10 4.44772 10 5C10 5.55228 9.55228 6 9 6H6V9C6 9.55229 5.55228 10 5 10C4.44771 10 4 9.55229 4 9V6H1C0.447715 6 0 5.55228 0 5C5.96046e-08 4.44771 0.447715 4 1 4L4 4V1C4 0.447715 4.44771 0 5 0Z" fill="white"></path>
          </svg>
          <span class="spinner hidden animate-spin rounded-full h-5 w-5 border-b-2"></span>
          <span>Add customer</span>
        </button>
      </div>
      <div class="flex flex-col w-full mb-5">
        <div class="-my-2 w-full h-full">
          <div class="h-full y-2 align-middle min-w-full">
            <div
              class="h-full shadow overflow-y-auto border-b border-dark-gray-200 sm:rounded-lg mb-8"
            >
              <table
                id="table"
                class="xl:table-fixed w-full min-w-full divide-y divide-dark-gray-200"
              >
                <thead class="bg-light-blue-200">
                  <tr>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
                    >
                      CUSTOMER NAME
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
                    >
                      MOBILE PHONE
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
                    >
                      EMAIL
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 xl:max-w-2/12 xl:w-2/12 2xl:w-fit 2xl:max-w-fit text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
                    >
                      ADDRESS
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
                    >
                      CREATED DATE
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 w-1/12 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
                    >
                      ACTIONS
                    </th>
                  </tr>
                </thead>
                <tbody id="table-body">
                  {{#each customers}}
                  {{#oddTableRowIndex @index}}
                    {{> customer id=id odd=true name=name phone=phone email=email address=address created=created}}
                    {{else}}
                    {{> customer id=id odd=false name=name phone=phone email=email address=address created=created}}
                  {{/oddTableRowIndex}}
                  {{/each}}
                </tbody>
              </table>
            </div>
            <nav
              class="border-t border-dark-gray-200 px-4 flex items-center justify-between sm:px-0 pointer-events-none"
            >
              <div class="-mt-px w-0 flex-1 flex">
                <a
                  href="#"
                  class="border-t-2 border-transparent pt-4 pr-1 inline-flex items-center text-sm font-medium text-dark-gray-500 hover:text-dark-gray-700 hover:border-dark-gray-300"
                >
                  <!-- Heroicon name: solid/arrow-narrow-left -->
                  <svg
                    class="mr-3 h-5 w-5 text-dark-gray-400"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    aria-hidden="true"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z"
                      clip-rule="evenodd"
                    ></path>
                  </svg>
                  Previous
                </a>
              </div>
              <div class="hidden md:-mt-px md:flex">
                <a
                  href="#"
                  class="border-brand text-brand border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
                >
                  1
                </a>
                <a
                  href="#"
                  class="border-transparent text-dark-gray-500 hover:text-dark-gray-700 hover:border-dark-gray-300 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
                  aria-current="page"
                >
                  2
                </a>
                <a
                  href="#"
                  class="border-transparent text-dark-gray-500 hover:text-dark-gray-700 hover:border-dark-gray-300 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
                >
                  3
                </a>
                <span
                  class="border-transparent text-dark-gray-500 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
                >
                  ...
                </span>
                <a
                  href="#"
                  class="border-transparent text-dark-gray-500 hover:text-dark-gray-700 hover:border-dark-gray-300 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
                >
                  8
                </a>
                <a
                  href="#"
                  class="border-transparent text-dark-gray-500 hover:text-dark-gray-700 hover:border-dark-gray-300 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
                >
                  9
                </a>
                <a
                  href="#"
                  class="border-transparent text-dark-gray-500 hover:text-dark-gray-700 hover:border-dark-gray-300 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
                >
                  10
                </a>
              </div>
              <div class="-mt-px w-0 flex-1 flex justify-end">
                <a
                  href="#"
                  class="border-t-2 border-transparent pt-4 pl-1 inline-flex items-center text-sm font-medium text-dark-gray-500 hover:text-dark-gray-700 hover:border-dark-gray-300"
                >
                  Next
                  <!-- Heroicon name: solid/arrow-narrow-right -->
                  <svg
                    class="ml-3 h-5 w-5 text-dark-gray-400"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    aria-hidden="true"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z"
                      clip-rule="evenodd"
                    ></path>
                  </svg>
                </a>
              </div>
            </nav>
          </div>
        </div>
      </div>
      <script>
        const createButton = document.getElementById('create');
        const table = document.getElementById('table');

        createButton.addEventListener('click', async () => {
          createButton.querySelector('svg').classList.add('hidden');
          createButton.querySelector('.spinner').classList.remove('hidden');
          const response = await fetch('/customers', {
            method: 'POST',
          });
          createButton.querySelector('svg').classList.remove('hidden');
          createButton.querySelector('.spinner').classList.add('hidden');
          if (!response.ok) {
            const { error } = await response.json();
            window.notificationEvents.fail();
            return;
          }
          const customerHtml = await response.text();
          table.querySelector('tbody').insertAdjacentHTML('afterbegin', customerHtml);

          if (table) {
            const tableBody = table.querySelector('tbody'),
              tableRows = tableBody.querySelectorAll('tr');
            
            for(const [i, el] of tableRows.entries()) {
              const row = tableBody.querySelector(`[data-id=${el.dataset.id}]`)
              if(i % 2 == 0) {
                row.classList.remove('bg-light-blue-50')
                row.classList.add('bg-white')
              } else {
                row.classList.remove('bg-white')
                row.classList.add('bg-light-blue-50')
              }
            }
          }

          window.notificationEvents.success('Customer has been added!', 'Now you can create an invoice for new customer.');
        });

        table.addEventListener('click', async (event) => {
          if (event.target.dataset.type === 'remove' || event.target.parentNode.dataset.type === 'remove') {
            const id = event.target.dataset.id || event.target.parentNode.dataset.id;
            const response = await fetch(`/customers/${id}`, {
              method: 'DELETE',
            });
            if (!response.ok) {
              const { error } = await response.json();
              window.notificationEvents.fail();
              return;
            }

            if (table.querySelectorAll('tr[data-id]').length === 1) {
              window.location.reload();
            } else {
              const customer = table.querySelector(`tr[data-id="${id}"]`);
              customer.remove();
            }

            if (table) {
              const tableBody = table.querySelector('tbody'),
                tableRows = tableBody.querySelectorAll('tr');
              
              for(const [i, el] of tableRows.entries()) {
                const row = tableBody.querySelector(`[data-id=${el.dataset.id}]`)
                if(i % 2 == 0) {
                  row.classList.remove('bg-light-blue-50')
                  row.classList.add('bg-white')
                } else {
                  row.classList.remove('bg-white')
                  row.classList.add('bg-light-blue-50')
                }
              }
            }

            window.notificationEvents.success('Customer has been removed!');
            return;
          }

          const href = event.target.parentNode.dataset.customerHref

          if(href)  {
            window.location = href;
          }
        });
      </script>
    </div>
  {{else}}
    <div class="flex-1 container pb-24 xl:mx-auto xxs:max-w-full xxs:px-4 xs:px-10 md:px-20">
      <div class="flex sm:items-center sm:justify-between py-6 xs:pt-12 xs:pb-6 flex-col sm:flex-row">
        <h2 class="text-3xl font-bold">
          Customers
        </h2>
      </div>
      <div class="flex flex-col w-full mb-5 items-center justify-center">
        <img src="/images/empty-list.svg" class="mb-4" />
        <p class="text-md font-medium text-brand-dark">
          There are no customers created yet
        </p>
        <p class="text-sm text-dark-gray-500 mb-4">
          Get started by adding a customer
        </p>
        <button
          id="create"
          class="w-fit relative xxs:flex xxs:mt-2 md:mt-0 justify-center items-center px-10 py-2.5 border border-transparent text-sm font-semibold rounded shadow-sm text-white bg-brand hover:bg-brand-outline active:ring-2 active:ring-offset-2 active:ring-brand-outline"
        >
          <svg
            width="10"
            height="10"
            viewBox="0 0 10 10"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M5 0C5.55228 0 6 0.447715 6 1V4L9 4C9.55228 4 10 4.44772 10 5C10 5.55228 9.55228 6 9 6H6V9C6 9.55229 5.55228 10 5 10C4.44771 10 4 9.55229 4 9V6H1C0.447715 6 0 5.55228 0 5C5.96046e-08 4.44771 0.447715 4 1 4L4 4V1C4 0.447715 4.44771 0 5 0Z"
              fill="white"
            ></path>
          </svg>
          <span class="ml-4">
            Add customer
          </span>
          <span
            class="spinner absolute hidden right-0 animate-spin rounded-full h-5 w-5 mx-2 border-b-2"
          ></span>
        </button>
      </div>
      <script>
        const createButton = document.getElementById('create');

        createButton.addEventListener('click', async () => {
          createButton.querySelector('.spinner').classList.remove('hidden');
          const response = await fetch('/customers', {
            method: 'POST',
          });
          createButton.querySelector('.spinner').classList.add('hidden');
          if (!response.ok) {
            const { error } = await response.json();
            window.notificationEvents.fail();
            return;
          }
          window.notificationEvents.success('Customer has been added!', 'Now you can create an invoice for new customer.');
          window.location = '/customers';
        });
      </script>
    </div>
  {{/if}}
</div>
{{> footer}}
