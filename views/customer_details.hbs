{{#unless session.isOnboarded}}
  {{> onboarding_notice}}
{{/unless}}
{{> header route="Customers"}}


<div class="flex-1 relative mt-0.5 h-full pb-8">
  <div class="flex flex-row justify-between items-center w-full min-h-50 lg:px-10 xxs:px-5 py-11">
    <a href="/customers">
      <button
        type="button"
        class="inline-flex items-center px-2.5 py-1.5 border border-dark-gray-300 shadow-sm text-xs font-medium rounded text-dark-gray-700 bg-white hover:bg-dark-gray-50 active:ring-1 active:ring-dark-gray-400"
      >
        <svg
          width="15"
          height="12"
          viewBox="0 0 15 12"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.16667 10.6668L1.5 6.00016M1.5 6.00016L6.16667 1.3335M1.5 6.00016L13.5 6.00016"
            stroke="#919191"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          ></path>
        </svg>
        <span class="ml-3">
          Back
        </span>
      </button>
    </a>
    <a href="/customers/{{customer.id}}/invoice" {{#if (eq services.length 0) }} class="disabled" {{/if}}>
      <button type="button" class="bg-brand border border-brand-outline text-white font-semibold relative text-sm flex flex-row gap-2 items-center px-4 py-2 rounded-full">
        <svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M5 0C5.55228 0 6 0.447715 6 1V4L9 4C9.55228 4 10 4.44772 10 5C10 5.55228 9.55228 6 9 6H6V9C6 9.55229 5.55228 10 5 10C4.44771 10 4 9.55229 4 9V6H1C0.447715 6 0 5.55228 0 5C5.96046e-08 4.44771 0.447715 4 1 4L4 4V1C4 0.447715 4.44771 0 5 0Z" fill="white"></path>
        </svg>
        <span class="spinner hidden animate-spin rounded-full h-5 w-5 border-b-2"></span>
        <span>Add invoice</span>
      </button>
    </a>
  </div>
  <div class="flex w-full lg:px-8 lg:flex-row xxs:flex-col">
    <div class="xxs:px-4 xxs:mb-4 lg:mb-0 lg:px-0">
      <h1 class="text-lg">
        Customer detail information
      </h1>
      <p class="text-sm text-dark-gray-500">
        Use a permanent address where you can receive mail.
      </p>
    </div>
    <div class="flex flex-col flex-1 sm:mt-5 lg:ml-20 xl:ml-28 lg:mt-0 w-full">
      <div class="flex flex-col w-full h-full px-10 py-14 md:shadow-md bg-white rounded">
        <div
          id="customer-name-row"
          class="flex xxs:flex-col md:flex-row xxs:pb-4 md:pb-5 md:border-b border-b-dark-gray-200"
        >
          <div class="flex flex-1 text-dark-gray-500">
            Customer name
          </div>
          <div class="flex flex-2 xxs:mt-1 md:mt-0 align-center text-brand-dark font-normal">
            {{customer.name}}
          </div>
        </div>
        <div
          id="customer-phone-row"
          class="flex xxs:py-4 md:py-5 xxs:flex-col md:flex-row md:border-b border-b-dark-gray-200"
        >
          <div class="flex flex-1 text-dark-gray-500">
            Mobile phone
          </div>
          <div class="flex flex-2 align-center text-brand-dark font-normal">
            {{customer.phone}}
          </div>
        </div>
        <div
          id="customer-email-row"
          class="flex xxs:py-4 md:py-5 xxs:flex-col md:flex-row md:border-b border-b-dark-gray-200"
        >
          <div class="flex flex-1 text-dark-gray-500">
            Email
          </div>
          <div class="flex flex-2 align-center text-brand-dark font-normal">
            {{customer.email}}
          </div>
        </div>
        <div
          id="customer-address-row"
          class="flex xxs:py-4 md:py-5 xxs:flex-col md:flex-row md:border-b border-b-dark-gray-200"
        >
          <div class="flex flex-1 text-dark-gray-500">
            Address
          </div>
          <div class="flex flex-2 align-center text-brand-dark font-normal">
            {{customer.address.line1}},
            {{customer.address.city}},
            {{customer.address.postal_code}},
            {{customer.address.country}}
          </div>
        </div>
        <div
          id="customer-created-date-row"
          class="flex xxs:pt-4 md:pt-5 xxs:flex-col md:flex-row"
        >
          <div class="flex flex-1 text-dark-gray-500">
            Created date
          </div>
          <div class="flex flex-2 align-center text-brand-dark font-normal">
            {{formatDate customer.created}}
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="flex flex-col w-full xxs:px-4 sm:px-6 lg:px-8 mb-6 mt-10">
    <div class="flex sm:items-center sm:justify-between py-6 xs:pt-12 xs:pb-6 flex-col sm:flex-row">
      <h2 class="text-3xl font-bold text-brand-dark">
        Customer's invoices
      </h2>
    </div>
    {{#if (eq invoices.length 0)}}
      <div class="-my-2 w-full h-60 max-h-60 flex flex-col items-center justify-center">
        <img src="/images/empty-list.svg" />
        <h3 class="mt-4 text-md text-center text-brand-dark">
          There are no invoices created yet for this customer
        </h3>
        <p class="text-sm text-dark-gray-500">
          Get started by adding an invoice
        </p>
        <a href="/customers/{{customer.id}}/invoice" {{#if (eq services.length 0) }} class="disabled" {{/if}}>
          <button
            type="button"
            class="relative xxs:flex xxs:mt-4 justify-center items-center px-6 py-2.5 border border-transparent text-sm font-semibold rounded shadow-sm text-white bg-brand hover:bg-brand-outline active:ring-2 active:ring-offset-2 active:ring-brand-outline"
          >
            <svg
              width="10"
              height="10"
              viewBox="0 0 10 10"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M5 0C5.55228 0 6 0.447715 6 1V4L9 4C9.55228 4 10 4.44772 10 5C10 5.55228 9.55228 6 9 6H6V9C6 9.55229 5.55228 10 5 10C4.44771 10 4 9.55229 4 9V6H1C0.447715 6 0 5.55228 0 5C5.96046e-08 4.44771 0.447715 4 1 4L4 4V1C4 0.447715 4.44771 0 5 0Z"
                fill="white"
              ></path>
            </svg>
            <span class="ml-4">
              Add invoice
            </span>
          </button>
        </a>
      </div>
    {{else}}
      <div class="-my-2 w-full h-max rounded shadow-md overflow-x-auto">
        <table id="table" class="xl:table-fixed w-full min-w-full divide-y divide-dark-gray-200">
          <thead class="bg-light-blue-200">
            <tr>
              <th
                scope="col"
                class="px-6 py-3 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
              >
                SERVICES
              </th>
              <th
                scope="col"
                class="px-6 py-3 w-1/12 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
              >
                COST
              </th>
              <th
                scope="col"
                class="px-6 py-3 xl:max-w-2/12 xl:w-2/12 2xl:w-fit 2xl:max-w-fit text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
              >
                LOCATION
              </th>
              <th
                scope="col"
                class="px-6 py-3 w-1/12 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
              >
                DATE
              </th>
              <th
                scope="col"
                class="px-6 py-3 w-1/12 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
              >
                TIME
              </th>
              <th
                scope="col"
                class="px-6 py-3 w-1/12 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
              >
                STATUS
              </th>
              <th
                scope="col"
                class="px-6 py-3 w-1/12 text-left text-xs font-medium text-dark-gray-500 uppercase tracking-wider"
              >
                ACTIONS
              </th>
            </tr>
          </thead>
          <tbody>
            {{#each invoices}}
              {{#oddTableRowIndex @index}}
                {{> invoice id=id odd=true location=customer_address created=created total=total lines=lines status=status total=total hosted_invoice_url=hosted_invoice_url}}
                {{else}}
                {{> invoice id=id odd=false location=customer_address created=created total=total lines=lines status=status hosted_invoice_url=hosted_invoice_url}}
              {{/oddTableRowIndex}}
            {{/each}}
          </tbody>
        </table>
      </div>
    {{/if}}
  </div>
</div>

<div class="hidden" id="pay-modal">

<!-- This example requires Tailwind CSS v2.0+ -->
<div class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <!--
    Background backdrop, show/hide based on modal state.

    Entering: "ease-out duration-300"
      From: "opacity-0"
      To: "opacity-100"
    Leaving: "ease-in duration-200"
      From: "opacity-100"
      To: "opacity-0"
  -->
  <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

  <div class="fixed z-10 inset-0 overflow-y-auto">
    <div class="flex items-end sm:items-center justify-center min-h-full p-4 text-center sm:p-0">
      <!--
        Modal panel, show/hide based on modal state.

        Entering: "ease-out duration-300"
          From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
          To: "opacity-100 translate-y-0 sm:scale-100"
        Leaving: "ease-in duration-200"
          From: "opacity-100 translate-y-0 sm:scale-100"
          To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
      -->

      <div class="relative bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:max-w-lg sm:w-full sm:p-6">
        <div class="absolute top-2 right-4">
          <button id="close_modal">X</button> 
          </div>
        <div>
          <div class="mt-3 text-center sm:mt-5">
            <h3 class="text-lg font-medium text-gray-900" id="modal-title">Pay this invoice</h3>
            <div class="mt-2">
              <p class="text-sm text-gray-500">Pay this invoice either in person or via hosted invoice.</p>
            </div>
          </div>
        </div>
        <div class="mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense">
          <a type="button" target="_blank" id="terminal" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm">Pay In Person</a>

          <a type="button" target="_blank" id="hosted-invoice" class="relative xxs:flex xxs:mt-4 md:mt-0 justify-center items-center px-6 py-2.5 border border-transparent text-sm font-medium rounded shadow-sm text-white bg-brand hover:bg-brand-outline active:ring-2 active:ring-offset-2 active:ring-brand-outline">Hosted Invoice</a>
        </div>
      </div>
    </div>
  </div>
</div>

</div>

{{> footer}}
<script>
  var closeModalButton = document.querySelector('#close_modal');
  closeModalButton.addEventListener("click", function(){
      document.querySelector('#pay-modal').classList.add('hidden');
    }, false);
  const table = document.getElementById('table');
  table && table.addEventListener('click', async (event) => {
    if (event.target.dataset.type === 'void' || event.target.parentNode.dataset.type === 'void') {
      const id = event.target.dataset.id || event.target.parentNode.dataset.id;
      const response = await fetch(`/invoices/${id}/void`, {
        method: 'POST',
      });
      if (!response.ok) {
        const { error } = await response.json();
        window.notificationEvents.fail();
        return;
      }
      const oldInvoice = table.querySelector(`tr[data-id="${event.target.dataset.id || event.target.parentNode.dataset.id}"]`);
      const newInvoiceHtml = await response.text();
      oldInvoice.insertAdjacentHTML('afterend', newInvoiceHtml);
      oldInvoice.remove();
      window.notificationEvents.success('Invoice has been voided!');
    } else if(event.target.dataset.type === 'table-row' || event.target.parentNode.dataset.type === 'table-row') {
       
        const invoiceId =  event.target.dataset.id || event.target.parentNode.dataset.id;
        const invoiceUrl = event.target.dataset.url || event.target.parentNode.dataset.url;
        const terminalUrl = '/customers/{{customer.id}}/pay/?invoice_id='+invoiceId;

        let modal = document.querySelector('#pay-modal');

        modal.classList.remove('hidden');
        modal.querySelector('#hosted-invoice').href = invoiceUrl;
        modal.querySelector('#terminal').href = terminalUrl;
        //window.open(invoiceUrl, '_blank');
    } else if(event.target.id === 'hosted-invoice-link-icon' || event.target.parentNode.id === 'hosted-invoice-link-icon') {
        window.open(event.target.dataset.url, '_blank')
    }
  });
</script>
