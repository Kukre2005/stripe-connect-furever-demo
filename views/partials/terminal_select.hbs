<!-- This example requires Tailwind CSS v2.0+ -->
<div>
  <label id="listbox-label" class="sr-only"> Change published status </label>
  <div class="relative">
    <div class="inline-flex divide-x divide-gray-600 rounded-md shadow-sm">
      <div class="inline-flex divide-x divide-gray-600 rounded-md shadow-sm">
        <div
          class="inline-flex items-center rounded-l-md border border-transparent bg-brand py-2 pl-3 pr-4 text-brand-dark shadow-sm"
        >
          <p id="selected-item" class="text-xs font-medium">Not Connected</p>
        </div>
        <button
          id="select-button"
          type="button"
          class="inline-flex items-center rounded-l-none rounded-r-md bg-brand p-2 text-sm font-medium text-brand-dark hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-brand focus:ring-offset-2 focus:ring-offset-gray-50"
          aria-haspopup="listbox"
          aria-expanded="true"
          aria-labelledby="listbox-label"
        >
          <span class="sr-only">Change published status</span>
          <!-- Heroicon name: mini/chevron-down -->
          <svg
            class="h-5 w-5 text-brand-dark"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            aria-hidden="true"
          >
            <path
              fill-rule="evenodd"
              d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
              clip-rule="evenodd"
            ></path>
          </svg>
        </button>
      </div>
    </div>

    <!--
      Select popover, show/hide based on select state.

      Entering: ""
        From: ""
        To: ""
      Leaving: "transition ease-in duration-100"
        From: "opacity-100"
        To: "opacity-0"
    -->
    <ul
      id="popover"
      class="hidden absolute right-0 z-10 mt-2 w-72 origin-top-right divide-y divide-gray-200 overflow-hidden rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
      tabindex="-1"
      role="listbox"
      aria-labelledby="listbox-label"
      aria-activedescendant="listbox-option-0"
    >
      <!--
        Select option, manage highlight styles based on mouseenter/mouseleave and keyboard navigation.

        Highlighted: "text-brand-dark bg-brand", Not Highlighted: "text-gray-900"
      -->
      <li
        id="virtual_option"
        class="indeterminate:text-brand-dark indeterminate:bg-brand text-gray-900 cursor-default select-none p-4 text-sm"
        id="listbox-option-0"
        role="option"
      >
        <div class="flex flex-col">
          <div class="flex justify-between">
            <!-- Selected: "font-semibold", Not Selected: "font-normal" -->
            <p class="font-bold">Virtual Reader</p>
            <!--
              Checkmark, only display for selected option.

              Highlighted: "text-brand-dark", Not Highlighted: "text-brand"
            -->
            <span class="text-brand">
              <!-- Heroicon name: mini/check -->
              <div class="h-3 w-3 bg-red-500 rounded-full indicator"></div>

            </span>
          </div>
          <!-- Highlighted: "text-gray-200", Not Highlighted: "text-brand" -->
          <p class="text-gray-700 my-2">Spin up a simulated virtual reader.</p>
          <div>
            <button
              id="connect-virutal-reader"
              onclick="connectReaderHandler()"
              class="inline-flex items-center px-4 py-2 font-semibold leading-6 text-sm shadow rounded-md text-brand-dark bg-brand hover:bg-gray-400 transition ease-in-out duration-150"
            >Connect Virtual Reader</button>
          </div>
        </div>
      </li>
      <li
        id="physical_option"
        class="text-gray-900 cursor-default select-none p-4 text-sm"
        id="listbox-option-0"
        role="option"
      >
        <div class="flex flex-col">
          <div class="flex justify-between">
            <!-- Selected: "font-semibold", Not Selected: "font-normal" -->
            <p class="font-bold">Physical Reader</p>
            <!--
              Checkmark, only display for selected option.

              Highlighted: "text-brand-dark", Not Highlighted: "text-brand"
            -->
            <span class="text-brand">
              <!-- Heroicon name: mini/check -->
              <div class="h-3 w-3 bg-red-500 rounded-full indicator"></div>

            </span>
          </div>
          <!-- Highlighted: "text-gray-200", Not Highlighted: "text-brand" -->
          <p class="text-gray-700 my-2">Connect to a physical device that you
            own.</p>
          <button
            onclick="discoverReaders()"
            type="button"
            id="discover-readers"
            type="button"
            class="inline-flex items-center px-4 py-2 font-semibold leading-6 text-sm shadow rounded-md text-brand-dark bg-brand hover:bg-gray-400 transition ease-in-out duration-150"
          >
            <svg
              class="animate-spin h-5 w-5 mr-3 ... hidden"
              viewBox="0 0 24 24"
            >
              <!-- ... -->
            </svg>
            <span>Discover Readers</span>
          </button>
          <div id="reader_list_container" class="mt-2 hidden">
            <h2 class="font-bold">Readers:</h2>
            <ul id="reader_list" class="divide-y divide-gray-200">

            </ul>
          </div>

        </div>
      </li>

      <!-- More items... -->
    </ul>
  </div>
</div>

<script>
  initSelectMenu(); function initSelectMenu() { console.log('clicked'); let
  popoverElem = document.querySelector('#popover'); let buttonElem =
  document.querySelector('#select-button'); document.addEventListener('click',
  function (event) { // üëáÔ∏è the element the user clicked console.log('user
  clicked: ', event.target); if(!popoverElem.classList.contains('hidden')) {
  console.log('its visible'); if (!popoverElem.contains(event.target)) {
  popoverElem.classList.add('hidden'); } } },true);
  buttonElem.addEventListener("click", function(event){ console.log('clicked');
  if(popoverElem.classList.contains('hidden')) {
  popoverElem.classList.remove('hidden') } }, true); }

</script>